{"file_name": "boot.py", "description": "A Streamlit-based chatbot using OpenAI GPT API.", "code": "import streamlit as st\nimport openai\nimport os\n\n# Definindo a chave de API de forma segura (usando vari\u00e1veis de ambiente)\nopenai.api_key = os.getenv(\"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\")  # Defina a vari\u00e1vel de ambiente 'OPENAI_API_KEY'\n\n# Fun\u00e7\u00e3o para gerar resposta usando a nova interface da OpenAI\ndef generate_response(prompt):\n    try:\n        # Usando a nova API de chat\n        response = openai.chat.Completion.create(\n            model=\"gpt-3.5-turbo\",  # Voc\u00ea pode usar \"gpt-4\" se tiver acesso\n            messages=[{\"role\": \"user\", \"content\": prompt}],\n            max_tokens=150,  # Limite de tokens para a resposta\n            temperature=0.7,  # Define a criatividade da resposta (0.0 a 1.0)\n        )\n        return response['choices'][0]['message']['content'].strip()\n    except Exception as e:\n        return f\"Erro ao gerar resposta: {e}\"\n\n# Interface do Streamlit\nst.title('Chatbot - Solucionador de Problemas')\n\n# Campo de entrada para o usu\u00e1rio\nprompt = st.text_input('Digite sua pergunta:', '')\n\n# Bot\u00e3o de envio\nif st.button('Enviar'):\n    if prompt:\n        # Gerar e exibir a resposta do chatbot\n        response = generate_response(prompt)\n        st.write('Resposta do Chatbot:', response)\n    else:\n        st.write('Por favor, insira uma pergunta.')"}
